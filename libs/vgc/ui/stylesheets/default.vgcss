.root {
    pixel-hinting: normal;

    /* With SourceSansPro @ 14dp, both cap-height and num-height are equal to 9dp.
     * So we ensure that font-ascent - 9dp == font-descent so that number and capital
     * letters are perfectly centered in the rectangle of selection.
     */
    font-size: 14dp;
    font-ascent: 12dp;
    font-descent: 3dp;

    caret-color: rgb(221, 221, 221);
    text-color: rgb(221, 221, 221);
    text-selection-color: rgb(221, 221, 221);
    text-selection-background-color: rgb(11, 82, 172);
}

.PanelArea > .Flex,
.PanelArea > .Flex > .Flex,
.root.Flex,
.root.Flex > .Flex {
    row-gap: 10dp;
    column-gap: 10dp;
}

.PanelArea {
    min-width: 30dp;
    min-height: 30dp;
    horizontal-stretch: 1;
    vertical-stretch: 1;
}

.PanelArea.left-sidebar {
    min-width: 150dp;
    horizontal-stretch: 0;
}

.Panel.with-padding,
.root.Flex {
    padding-top: 10dp;
    padding-right: 10dp;
    padding-bottom: 10dp;
    padding-left: 10dp;
}

.Menu {
    padding-top: 5dp;
    padding-right: 0dp;
    padding-bottom: 5dp;
    padding-left: 0dp;
    row-gap: 0dp;
    column-gap: 0dp;
    horizontal-shrink: 1;
    horizontal-stretch: 1;
    vertical-shrink: 0;
    vertical-stretch: 0;
}

.Menu.horizontal {
    padding-top: 0dp;
    padding-right: 5dp;
    padding-bottom: 0dp;
    padding-left: 5dp;
}

.MenuButton {
    padding-top: 0dp;
    padding-right: 10dp;
    padding-bottom: 0dp;
    padding-left: 10dp;
    horizontal-shrink: 0;
    horizontal-stretch: 0;
    vertical-shrink: 0;
    vertical-stretch: 0;
}

.Button,
.Label,
.LineEdit {
    preferred-width: auto;
    preferred-height: 21dp;
    vertical-shrink: 0;
    vertical-stretch: 0;
    text-vertical-align: middle;
    text-horizontal-align: center;
}

.MenuButton {
    preferred-height: 25dp;
}

.LineEdit {
    text-horizontal-align: left;
}

.Button,
.LineEdit,
.Plot2d,
.Menu {
    border-top-left-radius: 3dp;
    border-top-right-radius: 3dp;
    border-bottom-right-radius: 3dp;
    border-bottom-left-radius: 3dp;
}

.MenuButton,
.Menu.horizontal {
    border-top-left-radius: 0dp;
    border-top-right-radius: 0dp;
    border-bottom-right-radius: 0dp;
    border-bottom-left-radius: 0dp;
}

/* We use .Flex.Flex as a hack to increase specificity,
   otherwise `.root.Flex > .Flex` is more specific */
.Flex.Flex.field-row,
.Flex.Flex.field-group {
    vertical-stretch: 0;
    vertical-shrink: 0;
    column-gap: 1dp;
}

.field-group > .not-first {
    border-top-left-radius: 0dp;
    border-bottom-left-radius: 0dp;
}

.field-group > .not-last {
    border-top-right-radius: 0dp;
    border-bottom-right-radius: 0dp;
}

.LineEdit,
.Plot2d {
    background-color: rgb(34, 36, 37);
}

.Button {
    background-color: rgb(90, 94, 98);
    text-color: rgb(230, 230, 230);
}

.Button.hovered {
    background-color: rgb(110, 114, 118);
}

.Button.pressed {
    background-color: rgb(120, 124, 128);
}

.Button.checked {
    background-color: rgb(11, 82, 172);
}

.Button.checked.hovered {
    background-color: rgb(31, 102, 192);
}

.Button.checked.pressed {
    background-color: rgb(41, 112, 202);
}

.Menu {
    background-color: rgb(49, 51, 53);
}

.MenuButton {
    column-gap: 10dp;
    background-color: rgb(49, 51, 53);
    /* background-color drawn by .Menu */
}

.MenuButton.hovered {
    background-color: rgb(11, 82, 172);
}

.MenuButton.active {
    background-color: rgb(11, 82, 172);
}

.MenuButton.disabled {
    text-color: rgb(135, 135, 135);
    background-color: rgba(0, 0, 0, 0);
}

.MenuButton > .Text {
    text-horizontal-align: left;
}

.MenuButton > .Shortcut {
    text-horizontal-align: left;
}

.LineEdit {
    padding-right: 5dp;
    padding-left: 5dp;
}

.ColorPreview {
    border-width: 1dp;
    border-top-left-radius: 3dp;
    border-top-right-radius: 3dp;
    border-bottom-right-radius: 3dp;
    border-bottom-left-radius: 3dp;
    preferred-height: 21dp;
    horizontal-shrink: 1;
    horizontal-stretch: 1;
    vertical-shrink: 0;
    vertical-stretch: 0;
}

.ColorPaletteSelector {
    row-gap: 10dp;
}

.ColorPaletteSelector {
    /* We want to use its preferred height for width */
    vertical-shrink: 0;
    vertical-stretch: 0;
}

.ColorPalette .field-row > .field-label {
    preferred-width: 34dp;
    horizontal-stretch: 0;
    text-horizontal-align: left;
}

.ColorPalette .field-row.steps > .field-label {
    preferred-width: 42dp;
}

.ColorPalette .field-group > .LineEdit {
    /* not using 'preferred-width: auto' ensures that all line edits
       have the same width regardless of the value entered */
    preferred-width: 10dp;
    horizontal-stretch: 1;
    text-horizontal-align: left;
}

.ColorListView {
    preferred-width: auto;
    preferred-height: 34dp;
    vertical-stretch: 0;
}

.ColorListViewItem {
    preferred-width: 22dp;
    preferred-height: auto;
    border-top-left-radius: 5dp;
    border-top-right-radius: 5dp;
    border-bottom-right-radius: 5dp;
    border-bottom-left-radius: 5dp;
}

.ColorPaletteSelector {
    border-width: 0dp;
}

.ColorListViewItem {
    border-width: 1dp;
}

.Plot2d {
    background-color-on-hover: rgb(54, 56, 57);
    padding-top: 3dp;
    padding-right: 3dp;
    padding-bottom: 3dp;
    padding-left: 3dp;
    vertical-stretch: 10;
}

.Plot2d-label-right-aligned {
    text-horizontal-align: center;
    text-vertical-align: middle;
}

.Plot2d-label-center-aligned {
    text-horizontal-align: center;
    text-vertical-align: middle;
}
