/* ----------------------------------------------------------------------------
 *                                 LAYOUT
 */

.root {
    pixel-hinting: normal;

    /* Ensure that numbers and capital letters are centered in rectangle of selection. */
    font-size: 11dp;
    font-ascent: 11dp;
    font-descent: 3dp;
}

.Panel > .Flex,
.Panel > .Flex > .Flex {
    row-gap: 8dp;
    column-gap: 8dp;
}

.PanelArea {
    min-width: 30dp;
    min-height: 30dp;
    horizontal-stretch: 1;
    vertical-stretch: 1;
}

.PanelArea.left-sidebar {
    min-width: 150dp; /* = 4*32 (4 icons) + 3*2 (3 gaps) + 2*8 (2 paddings) */
    horizontal-stretch: 0;
}

.Panel.with-padding {
    padding-top: 8dp;
    padding-right: 8dp;
    padding-bottom: 8dp;
    padding-left: 8dp;
}

.PanelArea > .Flex > .TabBar {
    vertical-stretch: 0;
    preferred-height: 20dp;
}

.Menu {
    padding-top: 5dp;
    padding-right: 0dp;
    padding-bottom: 5dp;
    padding-left: 0dp;
    row-gap: 0dp;
    column-gap: 0dp;
    horizontal-shrink: 1;
    horizontal-stretch: 1;
    vertical-shrink: 0;
    vertical-stretch: 0;
}

.Menu.horizontal {
    padding-top: 0dp;
    padding-right: 5dp;
    padding-bottom: 0dp;
    padding-left: 5dp;
}

.Menu > .button {
    padding-top: 0dp;
    padding-right: 10dp;
    padding-bottom: 0dp;
    padding-left: 10dp;
}

.Menu > .separator {
    margin-top: 3dp;
    margin-bottom: 3dp;
    min-height: 1dp;
}

.Menu > .button,
.Menu > .separator {
    horizontal-shrink: 0;
    horizontal-stretch: 1;
    vertical-shrink: 0;
    vertical-stretch: 0;
}

.Menu.horizontal > .button,
.Menu.horizontal > .separator {
    horizontal-stretch: 0;
}

.Button,
.Label,
.LineEdit {
    preferred-width: auto;
    preferred-height: 18dp;
    vertical-shrink: 0;
    vertical-stretch: 0;
    text-vertical-align: middle;
    text-horizontal-align: center;
}

.Button > .text {
    horizontal-shrink: 1;
    horizontal-stretch: 1;
    vertical-shrink: 1;
    vertical-stretch: 1;
}

.Button > .icon {
    preferred-width: 18dp;
    preferred-height: 18dp;
    horizontal-shrink: 1;
    horizontal-stretch: 0;
    vertical-shrink: 1;
    vertical-stretch: 0;
    margin-top: 4dp;
    margin-right: 4dp;
    margin-bottom: 4dp;
    margin-left: 4dp;
}

.Menu > .button {
    preferred-height: 24dp;
}

.LineEdit {
    text-horizontal-align: left;
}

.Button,
.LineEdit,
.Plot2d,
.Menu {
    border-top-left-radius: 3dp;
    border-top-right-radius: 3dp;
    border-bottom-right-radius: 3dp;
    border-bottom-left-radius: 3dp;
}

.Menu > .button,
.Menu.horizontal {
    border-top-left-radius: 0dp;
    border-top-right-radius: 0dp;
    border-bottom-right-radius: 0dp;
    border-bottom-left-radius: 0dp;
}

.Menu {
    font-size: 12dp;
    font-ascent: 12dp;
    font-descent: 3dp;
}

.Menu > .button {
    column-gap: 20dp;
}

.Flex.Flex.field-row,
.Flex.Flex.field-group {
    vertical-stretch: 0;
    vertical-shrink: 0;
    column-gap: 1dp;
}

.field-group > .not-first {
    border-top-left-radius: 0dp;
    border-bottom-left-radius: 0dp;
}

.field-group > .not-last {
    border-top-right-radius: 0dp;
    border-bottom-right-radius: 0dp;
}

.Menu > .button > .text {
    text-horizontal-align: left;
}

.Menu > .button > .shortcut {
    text-horizontal-align: left;
}

.LineEdit {
    padding-right: 5dp;
    padding-left: 5dp;
}

.Dialog {
    border-top-left-radius: 8dp;
    border-top-right-radius: 8dp;
    border-bottom-right-radius: 8dp;
    border-bottom-left-radius: 8dp;
    padding-right: 14dp;
    padding-left: 14dp;
    padding-top: 14dp;
    padding-bottom: 14dp;
    min-width: 300dp;
}

.MessageDialog > .content {
    row-gap: 10dp;
}

.MessageDialog .title {
    text-horizontal-align: center;
}

.MessageDialog .body {
    vertical-stretch: 1;
    main-alignment: start;
    main-spacing: packed;
}

.MessageDialog .body > .Label {
    text-horizontal-align: left;
}

.MessageDialog .body > .Label.centered {
    text-horizontal-align: center;
}

.MessageDialog .buttons {
    main-alignment: end;
    main-spacing: packed;
    column-gap: 10dp;
    vertical-stretch: 0;
    vertical-shrink: 0;
    margin-top: 6dp;
}

.MessageDialog .buttons > .Button {
    horizontal-stretch: 0;
    horizontal-shrink: 0;
    padding-left: 20dp;
    padding-right: 20dp;
}

.Toggle {
    horizontal-stretch: 0;
    vertical-stretch: 0;
}

.Toggle > .back {
    background-color: rgb(255, 0, 0);
    preferred-width: 26dp;
    preferred-height: 15dp;
    border-top-left-radius: 7.5dp;
    border-top-right-radius: 7.5dp;
    border-bottom-right-radius: 7.5dp;
    border-bottom-left-radius: 7.5dp;
}

.Toggle > .front {
    background-color: rgb(0, 0, 0);
    preferred-width: 11dp;
    preferred-height: 11dp;
    border-top-left-radius: 5.5dp;
    border-top-right-radius: 5.5dp;
    border-bottom-right-radius: 5.5dp;
    border-bottom-left-radius: 5.5dp;
    margin-left: 2dp;
    margin-right: 2dp;
}

/* ----------------------------------------------------------------------------
 *                                 COLORS
*/

.root {
    caret-color: rgb(241, 241, 241);
    text-color: rgb(241, 241, 241);
    text-selection-color: rgb(241, 241, 241);
    text-selection-background-color: rgb(11, 82, 172);
    icon-foreground-color: rgb(241, 241, 241);
    icon-accent-color: rgb(11, 82, 172);
}

.PanelArea {
    handle-size: 12dp;
    handle-hovered-size: 2dp;
    handle-hovered-color: rgb(110, 114, 118);
}

/* Main Panel Background color.
 *
 * Setting it here instead of in `.Panel` is slightly more generic since here
 * it also includes any potential gap/margin/padding between the TabBar and
 * TabBody, and also paint the TabBar if there is no set background color on
 * the TabBar.
*/
.PanelArea > .Flex {
    background-color: rgb(65, 67, 69);
}

.PanelArea > .Flex > .TabBar {
    background-color: rgb(55, 57, 59);
}

.Menu,
.Dialog {
    background-color: rgb(45, 47, 48);
}

.Menu.main-menu-bar {
    background-color: rgb(49, 51, 53);
}

.Menu > .separator {
    background-color: rgb(65, 67, 69);
}

.LineEdit,
.Plot2d {
    background-color: rgb(34, 36, 37);
}

.Button {
    background-color: rgb(90, 94, 98);
    text-color: rgb(245, 245, 245);
}

.Button.hovered {
    background-color: rgb(110, 114, 118);
}

.Button.pressed {
    background-color: rgb(120, 124, 128);
}

.Button.checked {
    background-color: rgb(11, 82, 172);
}

.Button.checked.hovered {
    background-color: rgb(31, 102, 192);
}

.Button.checked.pressed {
    background-color: rgb(41, 112, 202);
}

.Menu > .button {
    background-color: rgba(0, 0, 0, 0);
    /* background-color drawn by .Menu */
}

.Menu > .button.hovered {
    background-color: rgb(11, 82, 172);
}

.Menu > .button.active {
    background-color: rgb(11, 82, 172);
}

.Menu > .button > .shortcut {
    text-color: rgb(165, 165, 165);
}

.Menu > .button.disabled {
    text-color: rgb(125, 125, 125);
    background-color: rgba(0, 0, 0, 0);
}

.Menu > .button.disabled > .shortcut {
    text-color: rgb(105, 105, 105);
}

.Toggle > .front {
    background-color: rgb(241, 241, 241);
}

.Toggle.off > .back {
    background-color: rgb(90, 94, 98);
    text-color: rgb(245, 245, 245);
}

.Toggle.off.hovered > .back {
    background-color: rgb(110, 114, 118);
}

.Toggle.off.pressed > .back {
    background-color: rgb(120, 124, 128);
}

.Toggle.on > .back {
    background-color: rgb(11, 82, 172);
}

.Toggle.on.hovered  > .back {
    background-color: rgb(31, 102, 192);
}

.Toggle.on.pressed  > .back {
    background-color: rgb(41, 112, 202);
}


/* ----------------------------------------------------------------------------
 *                                 TOOLS PANEL
*/

/* XXX Hard-coded min-height for now.
 * TODO: Implement non-stretchable vs stretchable Panels.
 *       The Tools Panel should probably be non-stretchable, so that its size
 *       is automatically computed from the number of tool buttons inside it.
 *
 * For now, .tools-options refers to the PanelArea, since we want to set a
 * min/max height for the PanelArea. However, in case of other sibling tabs to
 * the Tool Options panel, it doesn't make sense. So in the future, we'll have
 * .tool-options be a style class applied to the Panel, and the PanelArea
 * should be smart enough to infer appropriate min/max/preferred sizes based on
 * the min/max/preferred sizes of its tabs.
 */
.tools {
    vertical-stretch: 0;
    min-height: 70dp;
}

.tools .Panel > .Flex {
    cross-alignment: start;
    main-alignment: start;
    main-spacing: packed;
}

.tools .Panel > .Flex {
    column-gap: 2dp;
}

.tools .Button {
    preferred-height: 32dp;
    preferred-width: 32dp;
    horizontal-stretch: 0;
    horizontal-shrink: 0;
    vertical-stretch: 0;
    vertical-shrink: 0;
}

.tools .Button {
    background-color: rgba(0, 0, 0, 0);
}

.tools .Button.hovered {
    background-color: rgb(110, 114, 118);
}

.tools .Button.pressed {
    background-color: rgb(120, 124, 128);
}

.tools .Button.checked {
    background-color: rgb(11, 82, 172);
}

.tools .Button.checked.hovered {
    background-color: rgb(31, 102, 192);
}

.tools .Button.checked.pressed {
    background-color: rgb(41, 112, 202);
}

.tools .Button > .icon {
    margin-top: 8dp;
    margin-right: 8dp;
    margin-bottom: 8dp;
    margin-left: 8dp;
    horizontal-stretch: 1;
    horizontal-shrink: 1;
    vertical-stretch: 1;
    vertical-shrink: 1;
}

.tool-options {
    vertical-stretch: 0;
    min-height: 140dp;
}

.tool-options .Panel > .Flex {
    vertical-stretch: 0;
    main-alignment: start;
    main-spacing: packed;
}

.tool-options .Panel .SettingEdit {
    vertical-shrink: 0;
    vertical-stretch: 0;
    main-alignment: start;
    main-spacing: packed;
}

.tool-options .Panel .SettingEdit > .Label {
    horizontal-stretch: 1;
    preferred-width: 80dp;
    text-horizontal-align: left;
}

.tool-options .Panel .NumberSettingEdit > .NumberEdit {
    horizontal-stretch: 1;
    min-width: 10dp;
    preferred-width: 40dp;
}

/* ----------------------------------------------------------------------------
 *                               COLOR PALETTE
 */

.ColorPreview {
    border-width: 1dp;
    border-top-left-radius: 3dp;
    border-top-right-radius: 3dp;
    border-bottom-right-radius: 3dp;
    border-bottom-left-radius: 3dp;
    preferred-height: 18dp;
    horizontal-shrink: 1;
    horizontal-stretch: 1;
    vertical-shrink: 0;
    vertical-stretch: 0;
}

.ColorPaletteSelector {
    row-gap: 8dp;

    /* Prevent clipping of selected color border */
    margin-top: 2dp;
    margin-right: 2dp;
    margin-bottom: 2dp;
    margin-left: 2dp;
}

.ColorPaletteSelector {
    /* We want to use its preferred height for width */
    vertical-shrink: 0;
    vertical-stretch: 0;
}

.ColorPalette .field-row > .field-label {
    padding-left: 3dp;
    preferred-width: 34dp;
    horizontal-stretch: 0;
    text-horizontal-align: left;
}

.ColorPalette .field-row.steps > .field-label {
    preferred-width: 42dp;
}

.ColorPalette .field-group > .LineEdit {
    /* not using 'preferred-width: auto' ensures that all line edits
       have the same width regardless of the value entered */
    preferred-width: 10dp;
    horizontal-stretch: 1;
    text-horizontal-align: left;
}

.ColorListView {
    vertical-shrink: 0;
    vertical-stretch: 0;
    row-gap: 4dp;
    column-gap: 4dp;

    /* Prevent clipping of selected color border */
    margin-top: 2dp;
    margin-right: 2dp;
    margin-bottom: 2dp;
    margin-left: 2dp;
}

.ColorListViewItem {
    preferred-width: 17dp;
    preferred-height: 17dp;
    border-top-left-radius: 5dp;
    border-top-right-radius: 5dp;
    border-bottom-right-radius: 5dp;
    border-bottom-left-radius: 5dp;
}

.ColorPaletteSelector {
    border-width: 0dp;
}

.ColorListViewItem {
    border-width: 1dp;
}

/* ----------------------------------------------------------------------------
 *                                PLOT 2D
 */

.Plot2d {
    background-color-on-hover: rgb(54, 56, 57);
    padding-top: 3dp;
    padding-right: 3dp;
    padding-bottom: 3dp;
    padding-left: 3dp;
    vertical-stretch: 10;
}

.Plot2d > .vertical-axis-label {
    text-horizontal-align: center;
    text-vertical-align: middle;
}
