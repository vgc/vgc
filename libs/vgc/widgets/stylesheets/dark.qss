
/***************************** Color Scheme **********************************/

/* white
 * #bec0c2  Default text color
 * #4d4f52  Highlighted backgrounds for: QMenuBar::item, QToolButton
 * #404244  Background for: QWidget, QToolBar, QToolButton, QScrollbar
 * #313234  Background for: QListView, QAbstractScrollArea (inherited: QTreeView)
 * #2e2f30  Background for: QMenuBar, QMenu, QComboBox's popup, QPlainTextEdit, Console, QLineEdit, QSpinBoxtext
 * #212222  Borders for: QMenu, QPushButton, QLineEdit, QSpinBox, QComboBox, QListView, QTreeView, QScrollbar
 * black
 *
 * For highlighting/selecting, we either choose a lighter or darker existing tone.
 *
 * #0b52ac  VGC blue. Used for highlighting and text selection background.
 */

/******************************** Default ************************************/

/* Be aware that in terms of qss selector specificity (see 'Conflict
 * Resolution' in http://doc.qt.io/qt-5/stylesheet-syntax.html), C++ class
 * inheritance is irrelevant. This means that "QWidget" and "QPushButton" have
 * the same specificity, and whichever appears last in this file takes
 * precedence. Therefore, it is important that these generic styles appear
 * at the beginning of this file.
 */

QWidget {
    font-family: "Source Sans Pro";
    font-style: normal;
    font-weight: normal;
    font-size: @font-size;
    background: #404244;
    color: #dddddd;
}

QPlainTextEdit,
QLineEdit,
QSpinBox {
    selection-color: #dddddd;
    selection-background-color: #0b52ac;
}

/**************************** Menus, panels, and toolbar ***********************************/

QMenuBar,
vgc--widgets--PanelTitleBar {
    background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                stop:0 #3e4044,
                stop:1 #272829);
    border-bottom: 1px solid #212222;
}

QMenuBar,
vgc--widgets--PanelTitleBar QLabel {
    font-weight: 500;
    color: #e3e3e3;
}

QMenuBar::item {
    spacing: 0px;
    border-width: 0px 0px 2px 0px;
    padding: 7px 15px 5px 15px;
    border-style: solid;
    border-color: transparent;
}

QMenuBar::item:selected,
QMenuBar::item:pressed {
    border-color: #0b52ac;
}

vgc--widgets--MenuBar {
    qproperty-activeBorderBottomColor: #0b52ac;
}

QMenu,
QComboBox QFrame {
    background: #2e2f30;
    border: 1px solid #212222;
    padding: 3px 0px;
}

QMenu::item {
    padding: 5px 20px 5px 40px;
    background: #2e2f30;
}

QMenu::item:hover,
QMenu::item:selected,
QMenu::item:pressed {
    background: #0b52ac;
}

QMenu::separator {
    height: 1px;
    background: #212222;
    margin: 3px 10px;
}

QMenu::indicator {
    width: 10px;
    height: 10px;
}

QMenu::indicator:non-exclusive {
    margin-left: 10px;
    border: 1px solid #dddddd;
    border-radius: 2px;
    background-color: transparent;
}

QMenu::indicator:non-exclusive:checked {
    image: url(vgc:/widgets/images/checkbox-checked.svg);
}

vgc--widgets--PanelArea,
QToolBar,
QToolButton {
    background: #56585a;
}

vgc--widgets--Panel {
    border: 1px solid #323335;
    border-radius: 2px;
    background: #404244;
}

vgc--widgets--PanelTitleBar {
    padding: 5px 10px;
    border-top-left-radius: 2px;
    border-top-right-radius: 2px;
    border-bottom-left-radius: 0px;
    border-bottom-right-radius: 0px;
}

QToolBar {
    border: 0px;
    padding: 0px;
}

QToolButton {
    border: 0px;
    padding: 10px;
}

QToolButton:hover {
    background: #4d4f52;
}

QToolButton:pressed {
    background: #404244;
}

/********************************* Text Edits ********************************/

/* Note: This includes Console, which inherits QPlainTextEdit
 */

QPlainTextEdit {
    background: #2e2f30;
    border: 0px;
}

/******************************* Panels **************************************/

/******************************* Splitters **************************************/

vgc--widgets--Splitter {
    qproperty-grabWidth: 10;
    qproperty-highlightWidth: 4;
    qproperty-highlightColor: #0b52ac;
}

/*********************** One-line Input Widgets ***************************/

QLabel,
QPushButton,
QLineEdit,
QSpinBox,
QSpinBox::up-button,
QSpinBox::down-button,
QSpinBox::up-arrow,
QSpinBox::down-arrow,
QComboBox,
QComboBox::drop-down,
QComboBox::down-arrow {
    margin: 0px;
    padding: 0px;
    border: 0px;
}

QLabel {
    height: 25px;           /* Intended height with padding = 26px */
    padding-bottom: 1px;    /* Fine-tune vertical alignment */
    background: transparent;
}

QPushButton,
QLineEdit,
QSpinBox,
QComboBox {
    height: 23px;           /* Intended height with border + padding = 26px */
    padding-bottom: 1px;    /* Fine-tune vertical alignment */
    border: 1px solid #212222;
    border-radius: 2px;
}

QPushButton {
    padding-left: 20px;
    padding-right: 20px;
}

QComboBox {
    padding-left: 6px;
    selection-background-color: #404244;
}

QPushButton,
QComboBox {
    background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                stop:0 #3e4044,
                stop:1 #272829);
}

QPushButton:hover,
QComboBox:hover {
    background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                stop:0 #265eba,
                stop:1 #003d93);
}

QPushButton:pressed,
QComboBox:pressed {
    background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                stop:0 #004ca5,
                stop:1 #003184);
}

QLineEdit,
QSpinBox {
    background: #2e2f30;
}

QSpinBox::up-button,
QSpinBox::down-button {
    width: 12px;
    height: 12px;
    border-left: 1px solid #212222;
}

QSpinBox::up-button {
    background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                stop:0 #3e4044,
                stop:1 #323336);
}

QSpinBox::down-button {
    background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                stop:0 #323336,
                stop:1 #272829);
}

/* Note: we don't use a gradient here to ensure that the up-button have the
 * same appearance as the down-button when highlighted. Using a gradient makes
 * the down button look "less highlighted" than the up-button, which doesn't
 * look good at all when hovering back and forth between the up/down-buttons.
 */
QSpinBox::up-button:hover,
QSpinBox::down-button:hover {
    background: #0b52ac;
}

QSpinBox::up-button:pressed,
QSpinBox::down-button:pressed {
    background: #004197;
}

QComboBox::drop-down {
    width: 12px;
    height: 24px;
    border-left: 1px solid #212222;
    background: transparent;
}

QSpinBox::up-arrow,
QSpinBox::down-arrow {
    width: 12px;
    height: 12px;
}

QSpinBox::up-arrow {
    image: url(vgc:/widgets/images/spinboxup.png);
}

QSpinBox::down-arrow {
    image: url(vgc:/widgets/images/spinboxdown.png);
}

QComboBox::down-arrow {
    width: 12px;
    height: 24px;
    image: url(vgc:/widgets/images/spinboxdown.png);
}

/***************************** QListView **********************************/

QListView {
    background: #313234;
    border: 1px solid #212222;
}

/***************************** QTreeView **********************************/

QAbstractScrollArea {
    background: #313234;
}

QTreeView {
    border: 1px solid #212222;
}

/*************************** QScrollBar ***********************************/

/* Prevent drawing a background below QScrollBar:vertical|horizontal. The intent
 * is the following code (which doesn't work for mysterious reasons):
 *
 *   QScrollBar {
 *       background: transparent;
 *   }
 */
QPlainTextEdit > QWidget {
    background: transparent;
}

QScrollBar:horizontal,
QScrollBar:vertical {
    margin: 5px;
    border-radius: 5px;
    background-color: transparent;
}

QScrollBar:horizontal {
    height: 20px;
}

QScrollBar:vertical {
    width: 20px;
}

QScrollBar::handle:horizontal,
QScrollBar::handle:vertical {
    border-radius: 5px;
    background-color: #5d6060;
}

QScrollBar::handle:horizontal {
    min-width: 20px;
}

QScrollBar::handle:vertical {
    min-height: 20px;
}

QScrollBar::handle:hover {
    background-color: #0b52ac;
}

QScrollBar::add-line:horizontal,
QScrollBar::add-line:vertical,
QScrollBar::sub-line:horizontal,
QScrollBar::sub-line:vertical {
    height: 0px;
}

QScrollBar::add-page:horizontal,
QScrollBar::add-page:vertical,
QScrollBar::sub-page:horizontal,
QScrollBar::sub-page:vertical {
    background: none;
}

/********************************* Console ********************************/

vgc--widgets--Console,
vgc--widgets--ConsoleMargin {
    font-family: "Source Code Pro";
    border: 0px;
    background: #2e2f30;
}

/****************************** QColorDialog ******************************/

/* Relevant classes:
 *
 *   QColorDialog              the whole color dialog              (inherits QDialog)
 *   QColorPicker              2D hue-saturation gradient          (inherits QFrame)
 *   QColorLuminancePicker     vertical luminance gradient         (inherits QWidget)
 *   QWellArray                array of colored rectangles         (inherits QWidget)
 *   QColorWell                "Basic colors" and "Custom colors"  (inherits QWellArray)
 *   QColorShower              current color and RGB/HSV/HTML      (inherits QWidget)
 *   QColorShowLabel           current color                       (inherits QFrame)
 *
 * See: https://github.com/qt/qtbase/blob/5.12/src/widgets/dialogs/qcolordialog.cpp
 */

QColorPicker {
    border: 0px;
}

QColorLuminancePicker {
    color: black;                  /* color of the small triangle indicating current luminance */
    background-color: transparent; /* color of the right margin (background of small triangle) */
}

QWellArray,
QColorShowLabel {
    border: 1px solid #212222;
}

/********************************* FileDialog ********************************/

/* remove bottom-right size grip (was overlapping the Cancel button) */
QFileDialog QSizeGrip {
    background-color: transparent;
    width: 0px;
    height: 0px;
}
