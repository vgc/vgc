name: macOS Build

on: [push, pull_request]

env:
  BUILD_TYPE: Release
  QT_VERSION: 5.15.2

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: macos-10.15

    steps:
    - uses: actions/checkout@v2
      with:
        # We need to fetch more than one commit to get the correct build name
        fetch-depth: 100

    - name: Print git log
      run: git log

    # In case of a push event, the commit we care about is simply HEAD.
    # The current branch name can be found by parsing GITHUB_REF, for example,
    # if we are on the master branch, then GITHUB_REF = refs/heads/master.
    - name: Get commit branch and commit message
      if: github.event_name == 'push'
      run: |
        echo "COMMIT_BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
        echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
        echo "$(git log --format=%B -n 1 HEAD)" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    # In case of a pull_request event, the commit we care about is HEAD^2, that
    # is, the second parent of the pull request merge commit.
    # The current branch name is directly given by GITHUB_HEAD_REF
    - name: Get commit branch and commit message
      if: github.event_name == 'pull_request'
      run: |
        echo "COMMIT_BRANCH=$GITHUB_HEAD_REF" >> $GITHUB_ENV
        echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
        echo "$(git log --format=%B -n 1 HEAD^2)" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    # https://docs.github.com/en/free-pro-team@latest/actions/reference/environment-variables
    - name: Print useful environment variables
      if:
      run: |
        echo "GITHUB_WORKFLOW:      $GITHUB_WORKFLOW"
        echo "GITHUB_RUN_ID:        $GITHUB_RUN_ID"
        echo "GITHUB_RUN_NUMBER:    $GITHUB_RUN_NUMBER"
        echo "GITHUB_ACTION:        $GITHUB_ACTION"
        echo "GITHUB_ACTIONS:       $GITHUB_ACTIONS"
        echo "GITHUB_ACTOR:         $GITHUB_ACTOR"
        echo "GITHUB_REPOSITORY:    $GITHUB_REPOSITORY"
        echo "GITHUB_EVENT_NAME:    $GITHUB_EVENT_NAME"
        echo "GITHUB_EVENT_PATH:    $GITHUB_EVENT_PATH"
        echo "GITHUB_WORKSPACE:     $GITHUB_WORKSPACE"
        echo "GITHUB_SHA:           $GITHUB_SHA"
        echo "GITHUB_REF:           $GITHUB_REF"
        echo "GITHUB_HEAD_REF:      $GITHUB_HEAD_REF"
        echo "GITHUB_BASE_REF:      $GITHUB_BASE_REF"
        echo "GITHUB_SERVER_URL:    $GITHUB_SERVER_URL"
        echo "GITHUB_API_URL:       $GITHUB_API_URL"
        echo "GITHUB_GRAPHQL_URL:   $GITHUB_GRAPHQL_URL"
        echo "COMMIT_BRANCH:        $COMMIT_BRANCH"
        echo "COMMIT_MESSAGE:       $COMMIT_MESSAGE"

    # Install Qt.
    #
    # Note: this will automatically set Python to a version suitable
    # for installing Qt. We override this in the "Setup Python" step that follows.
    #
    # Later note: I'm not quite sure why we don't just run setup-python first,
    # then install Qt with "setup-python: false", as explained here:
    #   https://github.com/jurplel/install-qt-action#setup-python
    # But since when writing this note, there was explicitely "setup-python: true",
    # I assume there was a good reason, e.g., the installation of Qt fails because
    # the version of Python isn't appropriate.
    #
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{env.QT_VERSION}}
        setup-python: true

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
        architecture: 'x64'

    - name: Install other dependencies
      working-directory: ${{runner.workspace}}
      run: |
        brew install freetype
        brew install harfbuzz
        pip3 install dmgbuild

    - name: Configure
      working-directory: ${{runner.workspace}}
      run: |
        mkdir build
        cd build
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DVGC_COMMIT_BRANCH=$COMMIT_BRANCH -DQt=${{runner.workspace}}/Qt/$QT_VERSION/clang_64

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: make

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: make check

    - name: Deploy
      working-directory: ${{runner.workspace}}/build
      env:
        VGC_GITHUB_KEY: ${{secrets.VGC_GITHUB_KEY}}
      run: make deploy
