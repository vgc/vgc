name: Windows Build

on: [push, pull_request]

env:
  BUILD_TYPE: Release
  QT_VERSION: 5.15.2
  PYTHON_VERSION: 3.7

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
      with:
        # We need to fetch more than one commit to get the correct build name
        fetch-depth: 100
        submodules: 'recursive'

    - name: Print git log
      run: git log

    # In case of a push event, the commit we care about is simply HEAD.
    # The current branch name can be found by parsing GITHUB_REF, for example,
    # if we are on the master branch, then GITHUB_REF = refs/heads/master.
    - name: Get commit branch and commit message
      if: github.event_name == 'push'
      run: |
        echo "COMMIT_BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
        echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
        echo "$(git log --format=%B -n 1 HEAD)" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    # In case of a pull_request event, the commit we care about is HEAD^2, that
    # is, the second parent of the pull request merge commit.
    # The current branch name is directly given by GITHUB_HEAD_REF
    - name: Get commit branch and commit message
      if: github.event_name == 'pull_request'
      run: |
        echo "COMMIT_BRANCH=$GITHUB_HEAD_REF" >> $GITHUB_ENV
        echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
        echo "$(git log --format=%B -n 1 HEAD^2)" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    # https://docs.github.com/en/free-pro-team@latest/actions/reference/environment-variables
    - name: Print useful environment variables
      if:
      run: |
        echo "GITHUB_WORKFLOW:      $GITHUB_WORKFLOW"
        echo "GITHUB_RUN_ID:        $GITHUB_RUN_ID"
        echo "GITHUB_RUN_NUMBER:    $GITHUB_RUN_NUMBER"
        echo "GITHUB_ACTION:        $GITHUB_ACTION"
        echo "GITHUB_ACTIONS:       $GITHUB_ACTIONS"
        echo "GITHUB_ACTOR:         $GITHUB_ACTOR"
        echo "GITHUB_REPOSITORY:    $GITHUB_REPOSITORY"
        echo "GITHUB_EVENT_NAME:    $GITHUB_EVENT_NAME"
        echo "GITHUB_EVENT_PATH:    $GITHUB_EVENT_PATH"
        echo "GITHUB_WORKSPACE:     $GITHUB_WORKSPACE"
        echo "GITHUB_SHA:           $GITHUB_SHA"
        echo "GITHUB_REF:           $GITHUB_REF"
        echo "GITHUB_HEAD_REF:      $GITHUB_HEAD_REF"
        echo "GITHUB_BASE_REF:      $GITHUB_BASE_REF"
        echo "GITHUB_SERVER_URL:    $GITHUB_SERVER_URL"
        echo "GITHUB_API_URL:       $GITHUB_API_URL"
        echo "GITHUB_GRAPHQL_URL:   $GITHUB_GRAPHQL_URL"
        echo "COMMIT_BRANCH:        $COMMIT_BRANCH"
        echo "COMMIT_MESSAGE:       $COMMIT_MESSAGE"
        echo "WIX:                  $WIX"

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{env.PYTHON_VERSION}}
        architecture: 'x64'

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{env.QT_VERSION}}
        setup-python: false

    - name: Install latest CMake
      uses: lukka/get-cmake@latest

    # This does the following:
    # - Download vcpkg (version = given commit ID) to the given directory
    # - Install vcpkg and all the dependencies listed in vcpkg.json
    # - Cache the result, using as cache key the commit ID and a hash of
    #   vcpkg.json, so that we don't need to do it again if neither the
    #   commit ID of vcpkg.json file changes.
    # - Set $VCPKG_ROOT as the location where vcpkg was installed
    - name: Install vcpkg dependencies
      uses: lukka/run-vcpkg@v10.1
      with:
        vcpkgDirectory: ${{github.workspace}}/vcpkg
        vcpkgGitCommitId: 8518284c18b9f47b1ccae804cb68694181b780a8
        vcpkgJsonGlob: 'vcpkg.json'
        runVcpkgInstall: true

    - name: Configure
      working-directory: ${{runner.workspace}}
      run: |
        mkdir build
        cd build
        cmake --version
        cmake $GITHUB_WORKSPACE -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake -G "Visual Studio 16 2019" -A x64 -DVGC_COMMIT_BRANCH=$COMMIT_BRANCH -DPython_ROOT_DIR="$pythonLocation" -DWiX="$WIX"

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: make

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: make check

    - name: Deploy
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      env:
        VGC_GITHUB_KEY: ${{secrets.VGC_GITHUB_KEY}}
        VGC_CODESIGN_URL: ${{secrets.VGC_CODESIGN_URL}}
      run: make deploy
